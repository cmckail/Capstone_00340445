{"version":3,"sources":["services/image.service.js","common/Validators.js","services/auth.service.js","components/Register.js"],"names":["uploadPhoto","selectedFile","a","body","FormData","set","append","axios","post","isRequired","value","className","role","validatePostalCode","isPostalCode","validateMobilePhone","isMobilePhone","charLimit","length","validateEmail","isEmail","validateUsername","validatePassword","API_URL","register","userData","imageService","catch","error","response","console","log","data","profile_picture","JSON","stringify","authServices","login","username","password","then","accessToken","localStorage","setItem","Register","form","useRef","checkBtn","useState","setUsername","email","setEmail","setPassword","first_name","setFirstName","last_name","setLastName","address","setAddress","province","setProvince","postal_code","setPostalCode","city","setCity","appt_number","setApptNumber","phone_number","setPhoneNumber","setRole","setSelectedFile","isPhotoPicked","setIsPhotoPicked","photoPreview","setPhotoPreview","photoValid","setPhotoValid","photoValidText","setPhotoValidText","successful","setSuccessful","message","setMessage","history","useHistory","elevation","sx","padding","width","margin","marginTop","onSubmit","e","preventDefault","current","validateAll","context","_errors","resp","push","ref","container","spacing","item","xs","height","src","htmlFor","type","name","accept","onChange","event","photo","target","files","Boolean","includes","size","URL","createObjectURL","style","replace","validations","md","postal","toUpperCase","trim","textAlign","display"],"mappings":"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","file":"static/js/15.1443341b.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst API_URL = \"https://api.imgbb.com/1/upload?key=15d70c0c49ab3173c703b923def2f200\"\n\n\nconst uploadPhoto = async (selectedFile) => {\n\n    let body = new FormData()\n    body.set('key', '15d70c0c49ab3173c703b923def2f200')\n    body.append('image', selectedFile)\n\n    return axios.post('https://api.imgbb.com/1/upload', body)\n\n};\n\nexport default {\n    uploadPhoto\n}\n","import { isEmail, isPostalCode, isMobilePhone } from \"validator\";\n\nexport const isRequired = (value) => {\n    if (!value) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          This field is required!\n        </div>\n      );\n    }\n  };\n\n  export const validatePostalCode = (value) => {\n    if(!isPostalCode(value, 'CA')){\n       return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This is not a valid Canadian postal code.\n            </div>\n        );\n    }\n  }\n\n  // const validateExtension = ()\n  // JPG, PNG, BMP, GIF, TIF, WEBP, HEIC, PDF\n\n  export const validateMobilePhone = (value) => {\n    if(!isMobilePhone(value)){\n       return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This is not a valid Canadian mobile phone number.\n            </div>\n        );\n    }\n  }\n\n\n  export const charLimit = (value) => {\n    if (value && value.length > 1000) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          The limit is under 1000 Characters\n        </div>\n      )\n    }\n  }\n\n\nexport const validateEmail = (value) => {\n    if (!isEmail(value)) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This is not a valid email.\n            </div>\n        );\n    }\n};\n\nexport const validateUsername = (value) => {\n    if (value.length < 3 || value.length > 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The username must be between 3 and 20 characters.\n            </div>\n        );\n    }\n};\n\n\nexport const validatePassword = (value) => {\n    if (value.length < 6 || value.length > 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The password must be between 6 and 40 characters.\n            </div>\n        );\n    }\n};\n\n\nexport default {\n    charLimit,\n    validateMobilePhone,\n    validatePostalCode,\n    validatePassword,\n    validateUsername,\n    validateEmail,\n    isRequired,\n\n}","import axios from \"axios\";\nimport imageService from \"./image.service\";\n// const API_URL = \"http://localhost:8080/api/auth/\";\nconst API_URL = \"https://tadoo-backend-p9hgk.ondigitalocean.app/api/auth/\";\n\nconst register = async (userData) => {\n\n  if (userData.selectedFile) {\n    const { data } = await imageService.uploadPhoto(userData.selectedFile)\n      .catch((error) => {\n\n        if (error.response) {\n          console.log('error response', error.response.data)\n        }\n      });\n    userData = { ...userData, profile_picture: JSON.stringify(data.data, null, 4) }\n  }\n  delete userData['selectedFile']\n  return axios.post(API_URL + \"signup\", { ...userData })\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"signin\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    })\n};\n\nconst authServices = {\n  register,\n  login\n};\nexport default authServices\n","import React, { useState, useRef } from \"react\";\nimport { useHistory } from 'react-router'\nimport { Grid, Avatar, Paper, Container } from '@mui/material';\nimport {\n    validatePostalCode,\n    validateUsername,\n    validatePassword,\n    validateEmail,\n    isRequired,\n    validateMobilePhone\n} from '../common/Validators';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Button from \"react-validation/build/button\";\nimport authServices from \"../services/auth.service\";\n\n\nconst Register = () => {\n    const form = useRef();\n    const checkBtn = useRef();\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [first_name, setFirstName] = useState(\"\");\n    const [last_name, setLastName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [province, setProvince] = useState(\"ON\");\n    const [postal_code, setPostalCode] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [appt_number, setApptNumber] = useState(\"\");\n    const [phone_number, setPhoneNumber] = useState(\"\");\n    const [role, setRole] = useState(false);\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [isPhotoPicked, setIsPhotoPicked] = useState(false);\n    const [photoPreview, setPhotoPreview] = useState();\n    const [photoValid, setPhotoValid] = useState(true);\n    const [photoValidText, setPhotoValidText] = useState(\"Tester\");\n    const [successful, setSuccessful] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const onChangeUsername = (e) => {\n        setUsername(e.target.value.replace(/\\s/g, ''));\n    };\n\n    const onChangeEmail = (e) => {\n        setEmail(e.target.value);\n    };\n\n    const onChangePassword = (e) => {\n        setPassword(e.target.value.replace(/\\s/g, ''));\n    };\n\n    const onChangeFirstName = (e) => {\n        setFirstName(e.target.value);\n    };\n\n    const onChangeLastName = (e) => {\n        setLastName(e.target.value);\n    };\n\n    const onChangeAddress = (e) => {\n        setAddress(e.target.value);\n    };\n\n    const onChangeProvince = (e) => {\n        setProvince(e.target.value);\n    };\n\n    const onChangePostalCode = (e) => {\n        let postal = e.target.value\n        if (typeof e.target.value === 'string') {\n            postal = postal.toUpperCase().trim()\n        }\n        setPostalCode(postal);\n    };\n\n    const onChangeRole = (e) => {\n        setRole(e.target.value)\n    }\n\n    const onChangePhoneNumber = (e) => {\n        setPhoneNumber(e.target.value)\n    }\n\n    const onChangeCity = (e) => {\n        setCity(e.target.value)\n    }\n\n    const onChangeApptNumber = (e) => {\n        setApptNumber(e.target.value)\n    }\n\n    const history = useHistory();\n\n    const changeHandler = (event) => {\n        const photo = event.target.files[0];\n        if (Boolean(!photo.type.includes(\"image/\"))) {\n            setPhotoValid(false);\n            setPhotoValidText('File must be an Image');\n        } else if (photo.size > 31457280) {\n            setPhotoValid(false);\n            setPhotoValidText('Photo must be less then 30MB.');\n        } else {\n            setPhotoValid(true);\n            setSelectedFile(photo);\n            setPhotoPreview(URL.createObjectURL(event.target.files[0]))\n            setIsPhotoPicked(true);\n        }\n    };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        setSuccessful(false);\n        setMessage(\"\");\n        form.current.validateAll();\n        if (checkBtn.current.context._errors.length === 0 && photoValid) {\n            authServices.register({ username, email, password, first_name, last_name, address, city, province, postal_code, appt_number, role, phone_number, selectedFile })\n                .then((resp) => {\n                    history.push('/login')\n                })\n                .catch((error) => {\n                    if (error.response && error.response.data.message) {\n                        setMessage(error.response.data.message)\n                    } else {\n                        setMessage('Unknown error occurred, Please Contact Support')\n                    }\n                }\n                )\n        } else {\n            console.log('error');\n        }\n    };\n\n    return (\n        <Container >\n            <Paper elevation={3} sx={{ padding: '20px', width: \"70%\", margin: 'auto', marginTop: '20px' }}>\n                <Form onSubmit={handleRegister} ref={form}>\n                    {!successful && (\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Avatar sx={{ margin: 'auto', width: '125px', height: '125px' }} src={photoPreview || \"https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg\"} />\n                                <label htmlFor=\"file\">Avatar</label>\n                                <input className=\"form-control\" type=\"file\" name=\"file\" accept=\"image/*\" onChange={changeHandler} />\n                                {isPhotoPicked && !photoValid && (\n                                    (\n                                        <div className=\"alert alert-danger\" role=\"alert\">\n                                            {photoValidText}\n                                        </div>\n                                    )\n                                )}\n                            </Grid>\n                            <Grid item xs={12}>\n                                <label htmlFor=\"role\">Do you want to be a Tadoo Merchant?</label>\n                                <select name='role'\n                                    onChange={onChangeRole}\n                                    value={role}\n                                    className='form-control'\n                                    style={{ width: '100%' }}\n                                >\n                                    <option value={false}>No, I'm a Customer</option>\n                                    <option value={true}>Yes, I'm a Tattoo Artist</option>\n                                </select>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <label htmlFor=\"username\">Username</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"username\"\n                                    value={username}\n                                    onChange={onChangeUsername}\n                                    validations={[isRequired, validateUsername]}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <label htmlFor=\"password\">Password</label>\n                                <Input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={onChangePassword}\n                                    validations={[isRequired, validatePassword]}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <label htmlFor=\"email\">Email</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={onChangeEmail}\n                                    validations={[isRequired, validateEmail]}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <label htmlFor=\"first_name\">First Name</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"first_name\"\n                                    value={first_name}\n                                    onChange={onChangeFirstName}\n                                    validations={[isRequired]}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <label htmlFor=\"last_name\">Last Name</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"last_name\"\n                                    value={last_name}\n                                    onChange={onChangeLastName}\n                                    validations={[isRequired]}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <label htmlFor=\"city\">City</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"city\"\n                                    value={city}\n                                    onChange={onChangeCity}\n                                    validations={[isRequired]}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={4}>\n                                <label htmlFor=\"postal_code\">Postal Code</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"postal_code\"\n                                    value={postal_code}\n                                    onChange={onChangePostalCode}\n                                    validations={[isRequired, validatePostalCode]}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <label htmlFor=\"province\">Province</label>\n                                <select name='province'\n                                    onChange={onChangeProvince}\n                                    value={province}\n                                    className=\"form-control\"\n                                >\n                                    <option value={\"\"}></option>\n                                    <option value={\"ON\"}>ON</option>\n                                    <option value={\"QC\"}>QC</option>\n                                    <option value={\"NB\"}>NB</option>\n                                    <option value={\"MB\"}>MB</option>\n                                    <option value={\"BC\"}>BC</option>\n                                    <option value={\"PE\"}>PE</option>\n                                    <option value={\"SK\"}>SK</option>\n                                    <option value={\"AB\"}>AB</option>\n                                    <option value={\"NL\"}>NL</option>\n                                </select>\n                            </Grid>\n                            <Grid item xs={12} md={10}>\n                                <label htmlFor=\"address\">Address</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"address\"\n                                    value={address}\n                                    onChange={onChangeAddress}\n                                    validations={[isRequired]}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <label htmlFor=\"appt\">Appt</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"postal_code\"\n                                    value={appt_number}\n                                    onChange={onChangeApptNumber}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <label htmlFor=\"phone_number\">Phone Number</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"string\"\n                                    value={phone_number}\n                                    onChange={onChangePhoneNumber}\n                                    validations={[isRequired, validateMobilePhone]}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12} style={{ textAlign: 'right' }}>\n                                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                            </Grid>\n                        </Grid>\n                    )}\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className={successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                    <Button style={{ display: \"none\" }} ref={checkBtn} />\n\n                </Form>\n            </Paper>\n\n        </Container>\n    );\n};\n\nexport default Register;\n"],"sourceRoot":""}