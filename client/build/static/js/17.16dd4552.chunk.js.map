{"version":3,"sources":["services/image.service.js","services/auth.service.js","components/Login.js"],"names":["uploadPhoto","selectedFile","a","body","FormData","set","append","axios","post","API_URL","register","userData","imageService","catch","error","response","console","log","data","profile_picture","JSON","stringify","authServices","login","username","password","then","accessToken","localStorage","setItem","required","value","className","role","Login","form","useRef","checkBtn","useState","loggedIn","setLoggedIn","setUsername","setPassword","message","setMessage","history","useHistory","useEffect","isValidUser","user","parse","getItem","push","handleLogin","e","preventDefault","current","validateAll","context","_errors","length","err","container","style","width","item","xs","padding","justifyContent","onSubmit","ref","maxWidth","spacing","htmlFor","type","name","onChange","target","validations","textAlign","display"],"mappings":"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","file":"static/js/17.16dd4552.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst API_URL = \"https://api.imgbb.com/1/upload?key=15d70c0c49ab3173c703b923def2f200\"\n\n\nconst uploadPhoto = async (selectedFile) => {\n\n    let body = new FormData()\n    body.set('key', '15d70c0c49ab3173c703b923def2f200')\n    body.append('image', selectedFile)\n\n    return axios.post('https://api.imgbb.com/1/upload', body)\n\n};\n\nexport default {\n    uploadPhoto\n}\n","import axios from \"axios\";\nimport imageService from \"./image.service\";\n// const API_URL = \"http://localhost:8080/api/auth/\";\nconst API_URL = \"https://tadoo-backend-p9hgk.ondigitalocean.app/api/auth/\";\n\nconst register = async (userData) => {\n\n  if (userData.selectedFile) {\n    const { data } = await imageService.uploadPhoto(userData.selectedFile)\n      .catch((error) => {\n\n        if (error.response) {\n          console.log('error response', error.response.data)\n        }\n      });\n    userData = { ...userData, profile_picture: JSON.stringify(data.data, null, 4) }\n  }\n  delete userData['selectedFile']\n  return axios.post(API_URL + \"signup\", { ...userData })\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"signin\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    })\n};\n\nconst authServices = {\n  register,\n  login\n};\nexport default authServices\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Grid } from '@mui/material';\nimport authServices from \"../services/auth.service\";\nimport { isValidUser } from \"../common/TokenCheck\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport VButton from \"react-validation/build/button\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst Login = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    setLoggedIn(isValidUser())\n  }, [])\n\n  useEffect(() => {\n    if (loggedIn) {\n      let user = JSON.parse(localStorage.getItem(\"user\"));\n      history.push(`/profile/${user.username}`);\n    }\n  }, [loggedIn])\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      let success = await authServices.login(username, password)\n        .catch((err) => {\n          if (err.response) {\n            setMessage(err.response.data.message);\n          }\n\n        });\n      setLoggedIn(isValidUser);\n    }\n  };\n\n  return (\n    <Grid container style={{ width: '100%' }}>\n      <Grid item xs={10} style={{ padding: '50px' }}>\n\n      </Grid>\n      <Grid item xs={12} container style={{ justifyContent: 'center' }}>\n\n\n        <Form onSubmit={handleLogin} ref={form} style={{ maxWidth: '80%' }}>\n          <Grid container spacing={1}>\n            <Grid item xs={10}>\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={username}\n                onChange={onChangeUsername}\n                validations={[required]}\n              />\n            </Grid>\n\n            <Grid item xs={10}>\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={password}\n                onChange={onChangePassword}\n                validations={[required]}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n\n            </Grid>\n            <Grid item xs={10} style={{ textAlign: 'end' }}>\n              <button className=\"btn btn-primary btn-block\">\n                Login\n              </button>\n            </Grid>\n\n            {message && (\n              <Grid item xs={12}>\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {message}\n                </div>\n              </Grid>\n            )}\n            <VButton style={{ display: \"none\" }} ref={checkBtn} />\n          </Grid>\n        </Form>\n      </Grid>\n    </Grid >\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}